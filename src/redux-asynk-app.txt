src/index.js





src/store/index.js


import {configureStore} from "@redux.js/toolkit"
import todosReducer from "./todos"

const store = configureStore({
	reducer: {
		todos: todosReducer
	}
})


src/store/todos.js


import {createSlice, createAsyncThunc} from "react.js/toolkit"

export const fetchTodos = createAsyncThung(
	"todos/fetchTodos",
	async (_, {rejectWithValue}) => {
		try {
			const responce = await fetch("постлання на /todos")
		} catch (e) {
			return rejectedWithValue(e)
		}
	}
)

const todosSlice = createSlice({
	name: "todos",
	initialState: {
		todos: [],
		loading: false,
		error: null
	},
	extraReducers: {
		
	}


});

export default todoSlice.reducer;


src/App.js


import {useDispatch, useSelector} from "react-redux"
import {useEffect} from "react"

function App() {

	const {todos, error, loading} = useSelectore(state => state.todos)

	const dispatch = useDispatch()

	useEffect(() => {
		dispatch(fetchTodos)
	}, [])

	

	if (loading) {
		return <h1>Spinner</h1>
	}

	if (error) return <h1>{error}<h1>

	return (
		<div>
			{todos.map(todo => 
				<li key={todo.id}>
					<h4>
						{todo.title}
						<span>{todo.complited}</span>
					</h4>
					
				</li>
			)}
		</div>
	)

}